/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void preorderTraversal(TreeNode* root, string & ans){
        if(root){
            string ch = to_string(root->val);
            ans = ans + "(" + ch ;
            if(root->right!=NULL && root->left==NULL){
                ans = ans + "()";
            }
            else
                preorderTraversal(root->left, ans);
            preorderTraversal(root->right, ans);
            ans = ans+ ")";
        }
    }
    string tree2str(TreeNode* root) {
        string ans="";
        string ch = to_string(root->val); 
        ans = ans + ch;
        if(root->right!=NULL && root->left==NULL){
            ans = ans + "()";
        }
        else
            preorderTraversal(root->left, ans);
        preorderTraversal(root->right, ans);
        return ans;
    }
};
